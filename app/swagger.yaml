# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: '2.0'

# This is your document metadata
info:
  version: "1.0.0"
  title: words2Join
basePath: /api/v1
paths:
  /friends:
    get:
      description: get the list of all friends
      consumes:
      - application/json
      responses:
        200:
          description: OK
          schema:
            title: arrayOfAllFriends
            type: array
            items:
              $ref: "#/definitions/listas"
        500:
          description: A error occuerred
          schema:
            $ref: '#/definitions/error'
    post:
      description: with this method we can create a new relation 
      produces:
      - application/json
      parameters:
      - name: player
        in: body
        description: Friend input
        required: true
        schema:
          $ref: "#/definitions/newPlayer"
      responses:
        200:
          description: Friend inserted
          schema:
            $ref: "#/definitions/listas"
        500:
          description: ya existe un jugador con ese nombre
          schema:
            $ref: "#/definitions/error"
    delete:
      description: Erase all relations
      responses:
        200:
          description: Deleted objects
          schema:
            $ref: "#/definitions/listas"
        500:
          description: No removed objects
          schema:
            $ref: "#/definitions/error"
  /friends/{idfriend}:
    get:
      description: Get the list of friends of a determined player
      consumes:
      - application/json
      parameters:
        - name: idfriend
          in: path
          required: true
          type: string
          description: Input a player
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/listas"
        500:
          description: No hay amigos agregados
          schema:
            $ref: "#/definitions/error"
    put:
      description: update the list of friends of a determined player
      produces:
      - application/json
      parameters:
        - name: idfriend
          in: path
          required: true
          type: string
          description: Input a player    
        - name: friend
          in: body
          schema:
            $ref: "#/definitions/newFriend"
      responses:
        200:
          description: Updated 1 objects
          schema:
            $ref: "#/definitions/listas"
        500:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      description: delete friend from the list of friends of a determined player
      parameters:
        - name: idfriend
          in: path
          required: true
          type: string
          description: Input a player    
      responses:
        200:
          description: Deleted + numRemoved + objects.
          schema:
            $ref: "#/definitions/listas"
        500:
          description: error
          schema:
            $ref: "#/definitions/error"
  /friends/{idfriend}/{friend}:
    delete:
      description: erase selected friend
      parameters:
      - name: idfriend
        in: path
        required: true
        type: string
        description: Input a player    
      - name: friend
        in: path
        required: true
        type: string
        description: Input a friend of the player    
       
      responses:
        200:
          description: Deleted individual friend
          schema:
            $ref: "#/definitions/listas"
        500:
          description: error
          schema:
            $ref: "#/definitions/error"
  /individualGames:
    get:
      description: get all indivual games from all players
      consumes:
        - application/json
      responses:
        200:
          description: OK
          schema:
            title: arrayOFAllGames
            type: array
            items:
              $ref: "#/definitions/gameList"
        500:
          description: error
          schema:
            $ref: "#/definitions/error"
    post:
      description: add a individualGame at games 
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: newGame 
          in: body
          description: Game input
          required: true
          schema:
            $ref: "#/definitions/partida"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/gameList"
        500:
          description: error
          schema:
            $ref: "#/definitions/error"
      
    delete:
       
      description: delete all individual games
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/gameList"
        500:
          description: error
          schema:
            $ref: "#/definitions/error"
  /individualGames/{player}:
    get:
      description: get individual game at games
      consumes:
        - application/json
      parameters:
      - name: player
        in: path
        required: true
        type: string
        description: Input a player
      responses:
        200:
          description: get idividual games at games
          schema:
            $ref: "#/definitions/gameList"
        500:
          description: error
          schema:
            $ref: "#/definitions/error"
    put:
      description: update individual game at games
      produces:
        - application/json
      parameters:
      - name: player
        in: path
        required: true
        type: string
        description: Input a idGame
      - name: game
        in: body
        schema:
          $ref: "#/definitions/newidGame"   
      responses:
        200:
          description: Updated 1 objects
          schema:
            $ref: "#/definitions/gameList"
        409:
          description: score null
          schema:
            $ref: "#/definitions/error"
        500:
          description: error
          schema:
            $ref: "#/definitions/error"
    
    delete:
      description: delete selected game
      produces:
        - application/json
      parameters:
      - name: player
        in: path
        required: true
        type: string
        description: Input a idGame
      responses:
        200:
          description: Deleted 1 objects
          schema:
            $ref: "#/definitions/gameList"
        500: 
          description: error
          schema:
            $ref: "#/definitions/error"
  /individualRankings:
    get:
      description: get global ranking
      responses:
        200:
          description: GET to obtain global ranking
          schema:
            title: arrayOFAllGames
            type: array
            items:
              $ref: "#/definitions/gameList"
        500:
          description: error
          schema:
            $ref: "#/definitions/error"
  /individualRankings/{idUser}:
    get:
      description: get individual ranking
      parameters:
      - name: idUser
        in: path
        required: true
        type: string
        description: Input a player   
      responses:
        200:
          description: GET to obtain individual ranking
          schema:
              $ref: "#/definitions/gameList"
        500:
          description: error
          schema:
            $ref: "#/definitions/error"
  /singup:
    post:
      description: to join to the services
      produces:
        - application/json  
    
      responses:
        200:
          description: username
          schema:
            $ref: "#/definitions/user"
        500:
          description: error
          schema:
            $ref: "#/definitions/error"
  /login:
    post:
      description: to get in to the service
      produces:
        - application/json
      responses:
        200:
          description: login done
        
          

  /logout:
    get:
       
      description: exit from service
      responses:
        200:
          description: Logout done
  /users/{user}:
    get:
      parameters:
      - name: user
        in: path
        description: Introduce a user
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/user"
        500:
          description: error
          schema:
            $ref: "#/definitions/error"
definitions:
  listas:
    type: object
    properties:
      ArrayOfFriends:
        type: object 
        properties:
          player:
            type: string
          friends:
            type: object
            properties:
              player:
                type: string
              date:
                type: string
          id:
            type: string
  newFriend:
    type: object
    properties:
      player:
        type: string
      date:
        type: string
      
  
  newPlayer:
    type: object
    properties:
      player:
        type: string
      friends:
        type : object
        properties:
          player:
            type: string
          date:
            type: string
      

  gameList:
    type: object
    properties:
      ArrayOfGames:
        type: object 
        properties:
          partida:
            type: object
            properties:
              player:
                type: string
              score:
                type: integer
              date:
                type: string
              id:
                type: string       
            
  partida:
    type: object
    properties:
      player:
        type: string
      score:
        type: integer
      date:
        type: string
      id:
        type: string

  newidGame:
    type: object
    properties:
      player:
        type: string
      score:
        type: integer
      date:
        type: string

  error:
    type: integer
    format: int64      
  
  user:
    type: object
    properties:
      username: 
        type: string
      password: 
        type: string
  
  
  
  
  
